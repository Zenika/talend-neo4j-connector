<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List 
    	java.util.Map 
    	java.util.Set 
    	java.util.HashSet
    	java.util.Arrays
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();	

	%>
	tx_<%=cid%>.success();
	tx_<%=cid%>.finish();
	<%
    
    boolean useExistingConnection = "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__USE_EXISTING_CONNECTION__"));
    boolean batchImport = "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__BATCH_IMPORT__"));
    boolean shutdownDb = "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__SHUTDOWN_DB__"));
    String connection = ElementParameterParser.getValue(node, "__CONNECTION__");
    String dbconn = "dbService_" + connection;
    List<Map<String, String>> values = (List<Map<String, String>>) ElementParameterParser.getObjectValue(node, "__VALUES__");

	if (!useExistingConnection && !batchImport) {
		%>
		databaseService_<%=cid%>.shutdown();
		<%
	} else {		
		if (shutdownDb) {
		%>
			databaseService_<%=cid%>.shutdown();
		<%
		}
	}
	if (batchImport) {
		Set<String> indexNames = new HashSet();
	    for (Map<String, String> value : values) {
	   		String strIndexNames = value.get("INDEX_NAMES");
	   		if (strIndexNames != null && !strIndexNames.isEmpty()) {
	   			indexNames.addAll(Arrays.asList(strIndexNames.split(",")));
	   		}
	    }
	    for (String indexName : indexNames) {
	    	%>
	    	indexInserterMap_<%=cid%>.get(<%=indexName%>).flush();
	    	<%
	    }
		// Must shutdown database to prevent data corruption after batch importation
		%>
		indexProvider_<%=cid%>.shutdown();
		inserter_<%=cid%>.shutdown();
		<%
		if (useExistingConnection && !shutdownDb) {
			%>
			databaseService_<%=cid%> = new org.neo4j.kernel.EmbeddedGraphDatabase(storeDir_<%=cid%>);
			globalMap.put("<%=dbconn%>", databaseService_<%=cid%>);
			<%
		}
	}
%>
globalMap.put("<%=cid%>_NB_LINE", nb_line_<%=cid%>);