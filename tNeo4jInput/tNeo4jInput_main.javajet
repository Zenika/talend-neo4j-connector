<%@ jet
        imports="
            org.talend.designer.codegen.config.CodeGeneratorArgument
            org.talend.core.model.process.INode
            org.talend.core.model.process.IConnection
            org.talend.core.model.metadata.IMetadataColumn
			org.talend.core.model.metadata.IMetadataTable
			java.util.List
			java.util.ArrayList
			java.util.Set
			java.util.HashSet
			java.util.Map
			java.util.HashMap
            "
        %>
<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode) codeGenArgument.getArgument();
    String cid = node.getUniqueName();
    
    // Retrieve internal schema
    List<IMetadataColumn> columns = null;
    List<IMetadataTable> metadatas = node.getMetadataList();
    if (metadatas != null && metadatas.size() > 0) {
    	IMetadataTable metadata = metadatas.get(0);
    	if (metadata != null){
    		columns = metadata.getListColumns();
    	}
    }
    
    // Retrieve input and output Talend connections
    List<? extends IConnection> inputs = node.getIncomingConnections();
    List<? extends IConnection> outputs = node.getOutgoingSortedConnections();
    String incomingConnName = null;
    String outgoingConnName = null;
    
    if (inputs.size() > 0) {
    	IConnection in = inputs.get(0);
    	incomingConnName = in.getName();
   	}
   	
   	if (outputs.size() > 0) {
   		IConnection out = outputs.get(0);
   		outgoingConnName = out.getName();
   	}
    
    // Build mapping map
    Map<String, List<IMetadataColumn>> columnsByPrefixes = new HashMap<String, List<IMetadataColumn>>();
    for (IMetadataColumn column : columns) {
    	String columnPrefix = column.getLabel().split("_")[0];
    	List<IMetadataColumn> tmpColumn = columnsByPrefixes.get(columnPrefix);
    	if (tmpColumn == null) {
    		tmpColumn = new ArrayList<IMetadataColumn>();
    		columnsByPrefixes.put(columnPrefix, tmpColumn);
    	}
    	tmpColumn.add(column);
    }
%>
	java.util.Map<String, Object> row_<%=cid%> = resultIterator_<%=cid%>.next();
<%
	for (Map.Entry<String, List<IMetadataColumn>> columnsByPrefix : columnsByPrefixes.entrySet()) {
	String prefix = columnsByPrefix.getKey();	
%>
		if (row_<%=cid%>.get("<%=prefix%>") != null && row_<%=cid%>.get("<%=prefix%>") instanceof org.neo4j.graphdb.Node) {
			org.neo4j.graphdb.Node node_<%=cid%> = (org.neo4j.graphdb.Node) row_<%=cid%>.get("<%=prefix%>");
			<%
			for (IMetadataColumn column : columnsByPrefix.getValue()) {
				String propertyKey = column.getLabel().substring(prefix.length() + 1);
				String cType = column.getTalendType();				
				if (outgoingConnName != null) {
			%>
					<%
					if (cType.equals("id_String")) {
					%>
						if (node_<%=cid%>.getProperty("<%=propertyKey%>") instanceof String || node_<%=cid%>.getProperty("<%=propertyKey%>") == null) {
							<%=outgoingConnName%>.<%=column%> = (String) node_<%=cid%>.getProperty("<%=propertyKey%>");
						} else {
							<%=outgoingConnName%>.<%=column%> = node_<%=cid%>.getProperty("<%=propertyKey%>").toString();
						}
					<%
					} else if (cType.equals("Id_Long")) {
					%>
						if (node_<%=cid%>.getProperty("<%=propertyKey%>") instanceof Long || node_<%=cid%>.getProperty("<%=propertyKey%>") == null) {
							<%=outgoingConnName%>.<%=column%> = (Long) node_<%=cid%>.getProperty("<%=propertyKey%>");
						} else if (node_<%=cid%>.getProperty("<%=propertyKey%>") instanceof Double) {
							<%=outgoingConnName%>.<%=column%> = (node_<%=cid%>.getProperty("<%=propertyKey%>") == null) ? null : Math.round((Double) node_<%=cid%>.getProperty("<%=propertyKey%>"));
						} else {
							<%=outgoingConnName%>.<%=column%> = new Long(node_<%=cid%>.getProperty("<%=propertyKey%>").toString());
						}
					<%
					} else if (cType.equals("id_Integer")) {
					%>
						if (node_<%=cid%>.getProperty("<%=propertyKey%>") intanceof Integer || node_<%=cid%>.getProperty("<%=propertyKey%>") == null) {
							<%=outgoingConnName%>.<%=column%> = (Interger) node_<%=cid%>.getProperty("<%=propertyKey%>");
						} else if (node_<%=cid%>.getProperty("<%=propertyKey%>") instanceof Double) {
							<%=outgoingConnName%>.<%=column%> = (node_<%=cid%>.getProperty("<%=propertyKey%>") == null) ? null : (int) Math.round((Double) node_<%=cid%>.getProperty("<%=propertyKey%>"));
						} else {
							<%=outgoingConnName%>.<%=column%> = new Integer(node_<%=cid%>.getProperty("<%=propertyKey%>").toString();
						}
					<%
					} else if (cType.equals("id_Float")) {
					%>
						if (node_<%=cid%>.getProperty("<%=propertyKey%>") == null) {
							<%=outgoingConnName%>.<%=column%> = null;
						} else {
							<%=outgoingConnName%>.<%=column%> = new Boolean(node_<%=cid%>.getProperty("<%=propertyKey%>").toString();
						}
					<%
					} else if (cType.equals("id_Boolean")) {
					%>
						if (node_<%=cid%>.getProperty("<%=propertyKey%>") instanceof Boolean || node_<%=cid%>.getProperty("<%=propertyKey%>") == null) {
							<%=outgoingConnName%>.<%=column%> = (Boolean) node_<%=cid%>.getProperty("<%=propertyKey%>");
						} else {
							<%=outgoingConnName%>.<%=column%> = new Boolean(node_<%=cid%>.getProperty("<%=propertyKey%>").toString());
						}
					<%
					} else if (cType.equals("id_Object")) {
					%>
						<%=outgoingConnName%>.<%=column%> = node_<%=cid%>.getProperty("<%=propertyKey%>");
					<%
					}								
				}
			}
%>
		}			
<%			
	}	
%>
++nb_line_<%=cid%>;